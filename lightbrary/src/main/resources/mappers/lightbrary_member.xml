<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
 "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.lightbrary.member">
	
	<resultMap type="com.lightbrary.member.model.MemberDto" id="memberResultMap">
		<id column="NO" property="no"/>
		<result column="GRADE_CODE" property="gradeCode"/>
		<result column="EMAIL" property="email"/>
		<result column="PASSWORD" property="password"/>
		<result column="NAME" property="name"/>
		<result column="PHONE" property="phone"/>
		<result column="ADDRESS" property="address"/>
		<result column="CREATED_DATE" property="createdDate"
			javaType="java.util.Date"/>
		<result column="MODIFIED_DATE" property="modifiedDate"
			javaType="java.util.Date"/>
	</resultMap>
	
	<insert id="insertOneMember" parameterType="memberDto">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT MEMBER_NO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO MEMBER
		VALUE(NO
			, GRADE_CODE, NAME, PHONE
			, EMAIL, PASSWORD, ADDRESS)
		VALUES(#{no}, 1, #{name}, #{phone}
			, #{email}, #{password}, #{address})

	</insert>
	
	<select id="selectMember" resultMap="memberResultMap"
		parameterType="com.lightbrary.member.model.MemberListParamDto">
		SELECT * FROM
		    (
		        SELECT ROWNUM RNUM, M.*
		        FROM
		            (
		            SELECT *
		            FROM MEMBER
		            <where>
			            DEL_FLAG = 'N'
			            <if test="name != ''">AND NAME LIKE '%' || #{name} || '%'</if>
			            <if test="email != ''">AND EMAIL LIKE '%' || #{email} || '%'</if>
			            <choose>
			            	<when test="joinDateStart != ''">
			            		<choose>
			            			<when test="joinDateEnd != ''">
			            				AND CREATED_DATE BETWEEN #{joinDateStart} AND #{joinDateEnd}
			            			</when>
			            			<otherwise>
			            				AND CREATED_DATE &gt;= #{joinDateStart}
			            			</otherwise>
			            		</choose>
							</when>
							<otherwise>
								<if test="joinDateEnd != ''">
									AND CREATED_DATE &lt;= #{joinDateEnd}
								</if>
							</otherwise>
			            </choose>
		            </where>
		            ORDER BY NO DESC
		           ) M
		    )
		WHERE RNUM BETWEEN #{startPage} AND #{endPage}
	</select>
	
	<select id="selectOverdueMember" resultMap="memberResultMap"
		parameterType="com.lightbrary.member.model.MemberListParamDto">
		SELECT * FROM
		    (
		        SELECT ROWNUM RNUM, MMM.*
		        FROM (SELECT M1.*
               		  FROM MEMBER M1 JOIN
		            	(SELECT M.NO AS NO
			            FROM MEMBER M
			            JOIN RENT R
			            ON M.NO = R.MEMBER_NO
		         	   <where>
			            RENT_STATUS = '연체'
			            AND M.DEL_FLAG = 'N'
			            <if test="name != ''">AND NAME LIKE '%' || #{name} || '%'</if>
			            <if test="email != ''">AND EMAIL LIKE '%' || #{email} || '%'</if>
			            <choose>
			            	<when test="joinDateStart != ''">
			            		<choose>
			            			<when test="joinDateEnd != ''">
			            				AND CREATED_DATE BETWEEN #{joinDateStart} AND #{joinDateEnd}
			            			</when>
			            			<otherwise>
			            				AND CREATED_DATE &gt;= #{joinDateStart}
			            			</otherwise>
			            		</choose>
							</when>
							<otherwise>
								<if test="joinDateEnd != ''">
									AND CREATED_DATE &lt;= #{joinDateEnd}
								</if>
							</otherwise>
			            </choose>
		            </where>
		            GROUP BY M.NO
		            ORDER BY NO DESC
		           ) MM
		           ON MM.NO = M1.NO
		    )MMM
		  )
		WHERE RNUM BETWEEN #{startPage} AND #{endPage}
	</select>
	
	<select id="totalCountMember" resultType="int" 
		parameterType="com.lightbrary.member.model.MemberListParamDto">
		SELECT COUNT(*)
		FROM MEMBER
	   <where>
           DEL_FLAG = 'N'
           <if test="name != ''">AND NAME LIKE '%' || #{name} || '%'</if>
           <if test="email != ''">AND EMAIL LIKE '%' || #{email} || '%'</if>
           <choose>
           	<when test="joinDateStart != ''">
           		<choose>
           			<when test="joinDateEnd != ''">
           				AND CREATED_DATE BETWEEN #{joinDateStart} AND #{joinDateEnd}
           			</when>
           			<otherwise>
           				AND CREATED_DATE &gt;= #{joinDateStart}
           			</otherwise>
           		</choose>
			</when>
			<otherwise>
				<if test="joinDateEnd != ''">
					AND CREATED_DATE &lt;= #{joinDateEnd}
				</if>
			</otherwise>
           </choose>
	    </where>
	</select>
	
	<select id="totalCountOverdueMember" resultType="int" 
		parameterType="com.lightbrary.member.model.MemberListParamDto">
		SELECT COUNT(*)
		FROM MEMBER M JOIN RENT R
		ON M.NO = R.MEMBER_NO
	   <where>
           M.DEL_FLAG = 'N'
           AND R.RENT_STATUS='연체'
           <if test="name != ''">AND M.NAME LIKE '%' || #{name} || '%'</if>
           <if test="email != ''">AND M.EMAIL LIKE '%' || #{email} || '%'</if>
           <choose>
           	<when test="joinDateStart != ''">
           		<choose>
           			<when test="joinDateEnd != ''">
           				AND M.CREATED_DATE BETWEEN #{joinDateStart} AND #{joinDateEnd}
           			</when>
           			<otherwise>
           				AND M.CREATED_DATE &gt;= #{joinDateStart}
           			</otherwise>
           		</choose>
			</when>
			<otherwise>
				<if test="joinDateEnd != ''">
					AND M.CREATED_DATE &lt;= #{joinDateEnd}
				</if>
			</otherwise>
           </choose>
	    </where>
	</select>
	
	<select id="checkRent" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM RENT
		WHERE MEMBER_NO = #{no}
		AND RENT_DATE IS NOT NULL
		AND RETURN_DATE IS NULL
	</select>

	<select id="checkEmail" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND DEL_FLAG = 'N'
	</select>
	
	<select id="checkPhone" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE PHONE = #{phone}
		AND DEL_FLAG = 'N'
	</select>
	
	<select id="memberExist" parameterType="map" 
		resultMap="memberResultMap">
		SELECT NO, GRADE_CODE, NAME, EMAIL, PHONE, ADDRESS, CREATED_DATE, PASSWORD
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND PASSWORD = #{password}
		AND DEL_FLAG = 'N'
	</select>
	
	<select id="selectOneMember" parameterType="map" 
		resultMap="memberResultMap">
		SELECT *
		FROM MEMBER
		WHERE NO = #{no}
	</select>
	
	<select id="findEmail" parameterType="map" 
		resultMap="memberResultMap">
		SELECT NO, EMAIL
		FROM MEMBER
		WHERE NAME = #{userName}
		AND PHONE = #{phone}
		AND DEL_FLAG = 'N'
	</select>
	
	<update id="deleteOneMember" parameterType="java.lang.Integer">
		UPDATE MEMBER
		<set>
			 DEL_FLAG='Y'
		</set>
		WHERE NO = #{no}
	</update>
	
	<update id="updateOneMember" parameterType="memberDto">
		UPDATE MEMBER
		<set>
			<if test="password != ''">PASSWORD = #{password},</if>
			<if test="name != ''">NAME = #{name},</if>
			<if test="phone != ''">PHONE = #{phone},</if>
			<if test="address != ''">ADDRESS = #{address},</if>
			MODIFIED_DATE = SYSDATE
		</set>
		WHERE NO = #{no}
	</update>
	
	<select id="findMemberNo" parameterType="String" resultType="int">
		SELECT NO
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND DEL_FLAG = 'N'
	</select>
	
	<!--이메일로 확인하고 비밀번호를 랜덤으로 업뎃 -->
	<update id="resetPassword" parameterType="map">
		UPDATE MEMBER
		<set>
			PASSWORD = #{password},
			MODIFIED_DATE = SYSDATE
		</set>
		WHERE EMAIL = #{email}
		AND DEL_FLAG = 'N'
	</update>
</mapper>




